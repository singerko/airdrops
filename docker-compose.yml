version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airdrop_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/sites-available/default
    ports:
      - "8080:80"
    networks:
      - airdrop_network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - APP_ENV=local
      - DB_HOST=db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"] 
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  db:
    image: mysql:8.0
    container_name: airdrop_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: airdrop_portal
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: airdrop_user
      MYSQL_PASSWORD: airdrop_password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - airdrop_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s
    command: >
      --default-authentication-plugin=mysql_native_password
      --bind-address=0.0.0.0
      --max_connections=100

  mailhog:
    image: mailhog/mailhog
    container_name: airdrop_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - airdrop_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  airdrop_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
